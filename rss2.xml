<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>시간이 지나면 또 봐야지</title>
    <link>https://borakim-b.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>개발 블로그</description>
    <pubDate>Sat, 15 Jun 2019 08:55:36 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Mysql 설치</title>
      <link>https://borakim-b.github.io/2019/06/15/20190615-docker-mysql/</link>
      <guid>https://borakim-b.github.io/2019/06/15/20190615-docker-mysql/</guid>
      <pubDate>Sat, 15 Jun 2019 08:45:57 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;docker를 이용해서 빠르게 데이터베이스 개발환경을 만들어 본다.&lt;/p&gt;
&lt;h3 id=&quot;도커-이미지-다운로드-후-실행&quot;&gt;&lt;a href=&quot;#도커-이미지-다운로드-후-실행&quot; class=&quot;headerlink&quot; title=&quot;도커 이미지 다운로드 후 실
        
      
      </description>
      
      <content:encoded><![CDATA[<p>docker를 이용해서 빠르게 데이터베이스 개발환경을 만들어 본다.</p><h3 id="도커-이미지-다운로드-후-실행"><a href="#도커-이미지-다운로드-후-실행" class="headerlink" title="도커 이미지 다운로드 후 실행"></a>도커 이미지 다운로드 후 실행</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">❯ docker search mysql</span><br><span class="line">❯ docker pull mysql</span><br><span class="line">❯ docker images</span><br></pre></td></tr></table></figure><p>실행</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">❯ docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=1234 --name mysql mysql --default-authentication-plugin=mysql_native_password</span><br></pre></td></tr></table></figure><p>접속정보</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">host: 127.0.0.1</span><br><span class="line">Username: root</span><br><span class="line">Password: 1234</span><br></pre></td></tr></table></figure><p>컨테이너에 접속해서 확인해보려면</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">❯ docker exec -i -t mysql bash</span><br><span class="line">root@a4ce950e20aa:/# mysql -u root -p</span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure><h3 id="docker-compose-yml-파일을-만들어-더-간단하게-해보면"><a href="#docker-compose-yml-파일을-만들어-더-간단하게-해보면" class="headerlink" title="docker-compose.yml 파일을 만들어 더 간단하게 해보면.."></a>docker-compose.yml 파일을 만들어 더 간단하게 해보면..</h3><script src="https://gist.github.com/borakim-b/e923539bdd54240c46930dd024b05991.js"></script><ul><li>working_dir 를 설정 후 호스트의 디렉토리와 마운트 되도록 한다.</li><li>version은 <a href="https://docs.docker.com/compose/compose-file/" rel="external nofollow noopener noreferrer" target="_blank">docker engine 버전</a> 을 고려하여 작성한다.</li><li>기본 Encoding 과 Collation 값을 설정한다.<br>charset 옵션 없이 실행할 경우 DB 기본 Encoding 과 Collation 값이 latin1 로 설정된다.</li></ul><p>실행<br><code>❯ docker-compose up</code></p><h3 id="끝"><a href="#끝" class="headerlink" title="끝."></a>끝.</h3><p>docker-compose.yml 로 작성해 두면 빠르게 개발환경을 구성해서 시작하기 좋다.</p>]]></content:encoded>
      
      <comments>https://borakim-b.github.io/2019/06/15/20190615-docker-mysql/#disqus_thread</comments>
    </item>
    
    <item>
      <title>PHP 개발환경 구성 (Docker, CodeIgniter, Nginx, mariadb ..)</title>
      <link>https://borakim-b.github.io/2019/06/09/20190609-php-env-docker/</link>
      <guid>https://borakim-b.github.io/2019/06/09/20190609-php-env-docker/</guid>
      <pubDate>Sun, 09 Jun 2019 09:41:47 GMT</pubDate>
      <description>
      
        &lt;p&gt;CI 프레임워크를 사용해서 서비스를 개발할 때 zip 파일을 내려받은 후 웹서버의 config에 root 경로를 설정하고.. 필요한 라이브러리 다운받고 환경설정하고 하는데….&lt;/p&gt;
&lt;h3 id=&quot;Docker-기반으로-PHP-웹-서비스-개발환경-구성해보기&quot;&gt;&lt;a href=&quot;#Docker-기반으로-PHP-웹-서비스-개발환경-구성해보기&quot; class=&quot;headerlink&quot; title=&quot;Docker 기반으로 PHP 웹 서비스 개발환경 구성해보기&quot;&gt;&lt;/a&gt;Docker 기반으로 PHP 웹 서비스 개발환경 구성해보기&lt;/h3&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>CI 프레임워크를 사용해서 서비스를 개발할 때 zip 파일을 내려받은 후 웹서버의 config에 root 경로를 설정하고.. 필요한 라이브러리 다운받고 환경설정하고 하는데….</p><h3 id="Docker-기반으로-PHP-웹-서비스-개발환경-구성해보기"><a href="#Docker-기반으로-PHP-웹-서비스-개발환경-구성해보기" class="headerlink" title="Docker 기반으로 PHP 웹 서비스 개발환경 구성해보기"></a>Docker 기반으로 PHP 웹 서비스 개발환경 구성해보기</h3><a id="more"></a><h5 id="PHPDocker-io-에서-도커-파일-생성"><a href="#PHPDocker-io-에서-도커-파일-생성" class="headerlink" title="PHPDocker.io 에서 도커 파일 생성"></a><a href="https://phpdocker.io/generator" rel="external nofollow noopener noreferrer" target="_blank">PHPDocker.io</a> 에서 도커 파일 생성</h5><blockquote><p>PHPDocker.io is a tool that will help you build a typical PHP development environment based on Docker with just a few clicks</p></blockquote><p><img src="/images/php_docker.png" alt=""></p><p>다운로드된 파일을 보면 phpdocker 폴더와 docker-compose.yml 파일이 있음.</p><script src="https://gist.github.com/borakim-b/f841edadb7b335a0572894a69e54b08d.js"></script><p>docker-compose.yml 파일에 보면 각 컨테이너 서비스 별로 정의되어 있는 것을 확인할 수 있음.<br>redis, mariadb, webserver, php-fpm</p><p>phpdocker 파일내의 nginx 설정파일과 php 실행환경 파일에 대해 컨테이너에서 사용할 경로가 지정되어 있음.</p><h5 id="php-ini-overrides-ini-파일-수정"><a href="#php-ini-overrides-ini-파일-수정" class="headerlink" title="php-ini-overrides.ini 파일 수정"></a>php-ini-overrides.ini 파일 수정</h5>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">date.timezone = Asia/Seoul</span><br><span class="line">short_open_tag = On</span><br></pre></td></tr></table></figure><p>   short_open_tags는 <code>&lt;?php</code> 를 <code>&lt;?</code> 도 허용한다는..</p><h5 id="CI-3-x-의-경우-nginx-conf-파일-수정"><a href="#CI-3-x-의-경우-nginx-conf-파일-수정" class="headerlink" title="CI 3.x 의 경우 nginx.conf 파일 수정"></a>CI 3.x 의 경우 nginx.conf 파일 수정</h5><p>   CI 4.x 의 경우에는 수정하지 않아도 되는데..<br>   <code>root /application/public;</code> 에서 <code>root /application</code>로 변경 함.</p><h5 id="CodeIgniter-다운로드"><a href="#CodeIgniter-다운로드" class="headerlink" title="CodeIgniter 다운로드"></a><a href="https://www.codeigniter.com/user_guide/installation/downloads.html" rel="external nofollow noopener noreferrer" target="_blank">CodeIgniter</a> 다운로드</h5><p>   zip 파일 해제 후 1에서 받은 파일과 같은 디렉토리에 위치 시킴.</p><h5 id="docker-실행"><a href="#docker-실행" class="headerlink" title="docker 실행"></a>docker 실행</h5>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>   <img src="/images/php_docker_ps.png" alt=""></p><h5 id="확인"><a href="#확인" class="headerlink" title="확인"></a>확인</h5><p>   <a href="http://localhost:8000/" rel="external nofollow noopener noreferrer" target="_blank">http://localhost:8000/</a><br>   <img src="/images/php_docker_web.png" alt=""></p><h5 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h5><p><a href="https://github.com/borakim-b/php-starter-kit" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/borakim-b/php-starter-kit</a></p><hr><p>PHP5.4 부터는 내장 웹서버를 제공한다. 간단히 사용할 때만 쓰고.. 권장은 안하는 것 같다.</p>]]></content:encoded>
      
      <comments>https://borakim-b.github.io/2019/06/09/20190609-php-env-docker/#disqus_thread</comments>
    </item>
    
    <item>
      <title>PHP 서비스 개발에 필요한 최소한의 것</title>
      <link>https://borakim-b.github.io/2019/06/09/20190609-php-start-tip/</link>
      <guid>https://borakim-b.github.io/2019/06/09/20190609-php-start-tip/</guid>
      <pubDate>Sun, 09 Jun 2019 09:41:17 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;PHP&quot;&gt;&lt;a href=&quot;#PHP&quot; class=&quot;headerlink&quot; title=&quot;PHP?&quot;&gt;&lt;/a&gt;PHP?&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;PHP: Hypertext Preprocessor 서버사이드 스크립트 언어&lt;/p&gt;
&lt;p&gt;근본적으로, PHP의 문법은 C스타일을 따른다.&lt;br&gt;PHP 7 is the latest stable release&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/PHP&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;위키피디아&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP?"></a>PHP?</h3><blockquote><p>PHP: Hypertext Preprocessor 서버사이드 스크립트 언어</p><p>근본적으로, PHP의 문법은 C스타일을 따른다.<br>PHP 7 is the latest stable release</p><p><a href="https://ko.wikipedia.org/wiki/PHP" rel="external nofollow noopener noreferrer" target="_blank">위키피디아</a></p></blockquote><a id="more"></a><p><a href="https://www.php.net/manual/en/" rel="external nofollow noopener noreferrer" target="_blank">PHP Manual</a></p><h3 id="PHP-Web-Framework"><a href="#PHP-Web-Framework" class="headerlink" title="PHP Web Framework"></a>PHP Web Framework</h3><p><a href="https://codeigniter.com/" rel="external nofollow noopener noreferrer" target="_blank">Codeigniter 공식</a><br><a href="http://www.ciboard.co.kr/user_guide/kr/" rel="external nofollow noopener noreferrer" target="_blank">Codeigniter 한글매뉴얼</a></p><p>CI Application Flow (<a href="https://www.codeigniter.com/user_guide/overview/appflow.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.codeigniter.com/user_guide/overview/appflow.html</a>)</p><p><img src="/images/php_ci_appflowchart.gif" alt=""></p><h5 id="템플릿-엔진"><a href="#템플릿-엔진" class="headerlink" title="템플릿 엔진"></a>템플릿 엔진</h5><p><a href="https://tpl.xtac.net/introduction/" rel="external nofollow noopener noreferrer" target="_blank">템플릿언더바(Template Underscore)</a></p><h5 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h5><p><a href="https://www.jetbrains.com/phpstorm/" rel="external nofollow noopener noreferrer" target="_blank">PhpStorm</a></p><hr><p>PHP 프레임 워크로 <a href="https://laravel.com/" rel="external nofollow noopener noreferrer" target="_blank">라라벨</a> 도 있다고 하는데 사용해보지 않았다.<br>템블릿 언더바 문법 중 이러한 <code>&lt;!--{ }--&gt;</code> 템플릿 태그는 정말 난해했다. 정말 코드 가독성이 떨어진다.</p>]]></content:encoded>
      
      <comments>https://borakim-b.github.io/2019/06/09/20190609-php-start-tip/#disqus_thread</comments>
    </item>
    
    <item>
      <title>QR코드 생성 어떻게 할까</title>
      <link>https://borakim-b.github.io/2019/06/05/20190605-python-qrcode-generator/</link>
      <guid>https://borakim-b.github.io/2019/06/05/20190605-python-qrcode-generator/</guid>
      <pubDate>Wed, 05 Jun 2019 06:29:04 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;QR-코드는-뭘까&quot;&gt;&lt;a href=&quot;#QR-코드는-뭘까&quot; class=&quot;headerlink&quot; title=&quot;QR 코드는 뭘까?&quot;&gt;&lt;/a&gt;QR 코드는 뭘까?&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;QR&lt;/strong&gt; &lt;strong&gt;코드&lt;/strong&gt;(Quick Response code)은 흑백 격자무늬 패턴으로 정보를 나타내는 매트릭스 형식의 이차원 바코드&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="QR-코드는-뭘까"><a href="#QR-코드는-뭘까" class="headerlink" title="QR 코드는 뭘까?"></a>QR 코드는 뭘까?</h3><blockquote><p><strong>QR</strong> <strong>코드</strong>(Quick Response code)은 흑백 격자무늬 패턴으로 정보를 나타내는 매트릭스 형식의 이차원 바코드<br><a id="more"></a></p><p>바코드의 용량 제한을 극복하고 그 형식과 내용을 확장한 2차원의 바코드</p><p>기존의 바코드는 기본적으로 가로 배열에 최대 20여 자의 숫자 정보만 넣을 수 있는 1차원적 구성이지만, </p><p>QR코드는 가로, 세로를 활용하여 숫자는 최대 7,089자, 문자는 최대 4,296자, 한자도 최대 1,817자 정도를 기록할 수 있는 2차원적 구성이다</p><p>QR코드를 처음 개발한 일본의 덴소웨이브(1994년)가 (고맙게도) 특허권을 행사하지 않아 현재는 누구라도 다양한 목적으로 쉽게 제작, 사용할 수 있다는 점도 빼놓을 수 없다.</p><p><a href="https://terms.naver.com/entry.nhn?docId=3571963&amp;cid=59088&amp;categoryId=59096" rel="external nofollow noopener noreferrer" target="_blank">네이버캐스트</a>, <a href="https://ko.wikipedia.org/wiki/QR_코드" rel="external nofollow noopener noreferrer" target="_blank">위키</a></p></blockquote><h3 id="QR-코드-종류"><a href="#QR-코드-종류" class="headerlink" title="QR 코드 종류"></a>QR 코드 종류</h3><blockquote><p>QR코드 모델2는 코드가 일그러진 경우에도 문제없이 인식이 가능하도록 모델1을 개량한 코드입니다.</p><p>코드를 곡면에 인쇄하거나, 인식시의 각도로 인해 코드가 일그러진 상태에서도, 코드 내부에 배치된 얼라이먼트 패턴에 의해 뛰어난 성능으로 인식할 수 있습니다.</p><p>최대 버전은 40(177 X 177셀)로 7089자리의 숫자까지 취급할 수 있습니다.</p><p><a href="https://www.qrcode.com/ko/codes/" rel="external nofollow noopener noreferrer" target="_blank">https://www.qrcode.com/ko/codes/</a></p></blockquote><p>일상에서 보게되는 QR코드 이미지가 모델2인가 보다.</p><h3 id="QR-코드는-어떻게-만들까"><a href="#QR-코드는-어떻게-만들까" class="headerlink" title="QR 코드는 어떻게 만들까?"></a>QR 코드는 어떻게 만들까?</h3><p><a href="https://segno.readthedocs.io/en/stable/comparison-qrcode-libs.html#create-a-qr-code" rel="external nofollow noopener noreferrer" target="_blank">Python QRCode Generator 라이브러리 비교</a></p><p>간단하게 <a href="https://pypi.org/project/qrcode/" rel="external nofollow noopener noreferrer" target="_blank">qrcode</a> 를 이용해서 QR 이미지를 생성해보면..</p><script src="https://gist.github.com/borakim-b/694fa5d60cb3dce3019ba03e5acee54b.js"></script><p><img src="/images/qrcode_c.png" alt=""></p><p>QR코드 이미지를 스캔하면 <a href="https://borakim-b.github.io/">https://borakim-b.github.io/</a> 로 링크된다.    </p><hr><p>QR Code Generator 서비스를 활용해서 간단하게 만들어 볼 수도 있다.<a href="https://qr.naver.com/" rel="external nofollow noopener noreferrer" target="_blank">네이버QR코드</a>, <a href="https://zxing.appspot.com/generator" rel="external nofollow noopener noreferrer" target="_blank">zxing</a></p><h5 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h5><p><em>QRCode 스캐너</em></p>]]></content:encoded>
      
      <comments>https://borakim-b.github.io/2019/06/05/20190605-python-qrcode-generator/#disqus_thread</comments>
    </item>
    
    <item>
      <title>AWS 프리티어 사용 및 계정 생성</title>
      <link>https://borakim-b.github.io/2019/06/03/20190603-aws-free-tier/</link>
      <guid>https://borakim-b.github.io/2019/06/03/20190603-aws-free-tier/</guid>
      <pubDate>Mon, 03 Jun 2019 06:41:16 GMT</pubDate>
      <description>
      
        &lt;p&gt;AWS 프리티어는 처음 AWS에 가입한 날부터 12개월 동안 사용 가능&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/ko/free/?all-free-tier.sort-by=item.additionalFields.SortRank&amp;amp;all-free-tier.sort-order=asc&amp;amp;awsf.Free%20Tier%20Types=categories%23featured&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;AWS 프리 티어 세부정보&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;미리보기 (2019. 6. 1 기준. 익숙한 서비스 위주로 확인)&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>AWS 프리티어는 처음 AWS에 가입한 날부터 12개월 동안 사용 가능</p><p><a href="https://aws.amazon.com/ko/free/?all-free-tier.sort-by=item.additionalFields.SortRank&amp;all-free-tier.sort-order=asc&amp;awsf.Free%20Tier%20Types=categories%23featured" rel="external nofollow noopener noreferrer" target="_blank">AWS 프리 티어 세부정보</a></p><p>미리보기 (2019. 6. 1 기준. 익숙한 서비스 위주로 확인)<br><a id="more"></a><br><strong>12 개월 무료</strong> </p><blockquote><blockquote></blockquote><ul><li>Elastic Block Storage <ul><li>30GB </li></ul></li><li>ElastiCache<ul><li>750시간</li><li>cache t2micro 노드 사용량</li></ul></li><li>Trusted Advisor<ul><li>4개</li><li>성능 및 보안에 대한 점검 항목</li></ul></li><li>RDS<ul><li>750시간</li><li>db.t2.micro 데이터 베이스 사용량</li></ul></li><li>EC2<ul><li>750시간</li><li>Linux, RHEL 또는 SLES t2.micro 인스턴스를 월별 <strong>750</strong>시간 사용</li></ul></li><li>S3<ul><li>표준스토리지 5GB</li><li><strong>Get</strong> <strong>요청</strong> <strong>20,000</strong>개</li><li><strong>Put</strong> <strong>요청</strong> <strong>2,000</strong>개</li></ul></li><li>Elastic Container Registry<ul><li>월별 500MB</li><li>docker 이미지 저장 및 검색</li></ul></li></ul></blockquote><p><strong>항상 무료</strong></p><blockquote><blockquote></blockquote><ul><li>SES<ul><li>62000 개</li><li>월별 아웃바운드 메시지</li></ul></li><li>CloudFront<ul><li>50GB의 데이터 송신, 2백만 건의 HTTP 및 HTTPS 요청</li></ul></li><li>Lambda<ul><li>월별 1백만개</li></ul></li><li>DynamoDB<ul><li>25GB 스토리지</li></ul></li><li>CloudWatch<ul><li>사용자 정의 지표 10개 및 경보 10개</li><li><strong>로그</strong> <strong>데이터</strong> <strong>수집</strong> <strong>5GB</strong> <strong>및</strong> <strong>로그</strong> <strong>데이터</strong> <strong>아카이브</strong> <strong>5GB</strong></li><li>대쉬보드 3개</li></ul></li><li>Cognito<ul><li>모바일 자격증명</li><li>사용자 풀 기능에는 월별 50,000 MAU </li></ul></li></ul></blockquote><hr><h3 id="AWS-계정-생성-하면서-…"><a href="#AWS-계정-생성-하면서-…" class="headerlink" title="AWS 계정 생성 하면서 …"></a>AWS 계정 생성 하면서 …</h3><ul><li><p>계정 생성 시 결제 카드 정보를 입력하게 되어있다.<br>계정 생성 후 등록한 카드로 USD 1달러가 결제 됨 몇일 후에 돌려준다고 함.</p></li><li><p>계정생성이 완료되면 등록한 메일주소로 3개의 소개 및 확인 메일이 옴</p></li><li><p>AWS Management Console로 들어가서 계정 생성 시 입력한 이메일로 로그인 하면 됨.</p></li></ul><h3 id="AWS-계정-생성-후-한일"><a href="#AWS-계정-생성-후-한일" class="headerlink" title="AWS 계정 생성 후 한일"></a>AWS 계정 생성 후 한일</h3><ul><li>루트 계정 MFA 활성화<ul><li>사용자 &gt; 내 보안 자격 증명. 루트 계정에서 MFA 활성화 함.</li></ul></li><li>예상금액 1달러 초과 시 과금알림 설정<ul><li>Budgets &gt; 예산작성 으로 들어가서 비용예산 유형으로 과금설정을 해둠</li><li>1달러가 초과 되었을 경우 이메일로 알림이 오도록 설정해 두었다.</li></ul></li></ul>]]></content:encoded>
      
      <comments>https://borakim-b.github.io/2019/06/03/20190603-aws-free-tier/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Github Pages Blog + Hexo (tranquilpeak Theme)</title>
      <link>https://borakim-b.github.io/2018/05/15/github-blog-hexo-tranquilpeak/</link>
      <guid>https://borakim-b.github.io/2018/05/15/github-blog-hexo-tranquilpeak/</guid>
      <pubDate>Tue, 15 May 2018 05:31:08 GMT</pubDate>
      <description>
      
        &lt;p&gt;참고.&lt;br&gt;&lt;a href=&quot;https://hexo.io/ko/docs/setup.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://hexo.io/ko/docs/setup.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak&lt;/a&gt;&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>참고.<br><a href="https://hexo.io/ko/docs/setup.html" rel="external nofollow noopener noreferrer" target="_blank">https://hexo.io/ko/docs/setup.html</a><br><a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak</a><br><a id="more"></a></p><h3 id="설치환경"><a href="#설치환경" class="headerlink" title="설치환경"></a>설치환경</h3><p>node v8.9.1<br>npm 5.5.1</p><h3 id="repository-생성"><a href="#repository-생성" class="headerlink" title="repository 생성"></a>repository 생성</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Username&gt;.github.io</span><br></pre></td></tr></table></figure><p>로컬에 생성한 repository를 clone 받는다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/&lt;Username&gt;/&lt;Username&gt;.github.io.git</span><br><span class="line">$ <span class="built_in">cd</span> &lt;Username&gt;.github.io</span><br></pre></td></tr></table></figure><h3 id="Hexo-설치"><a href="#Hexo-설치" class="headerlink" title="Hexo 설치"></a>Hexo 설치</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="folder-생성-초기화"><a href="#folder-생성-초기화" class="headerlink" title="folder 생성 초기화"></a>folder 생성 초기화</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>blog 라는 폴더명으로 생성했다고 가정한다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h3 id="theme-설치"><a href="#theme-설치" class="headerlink" title="theme 설치"></a>theme 설치</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> blog/themes</span><br></pre></td></tr></table></figure><p>원하는 테마를 내려받는다. <a href="https://hexo.io/themes/" rel="external nofollow noopener noreferrer" target="_blank">https://hexo.io/themes/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak.git</span><br><span class="line">$ mv hexo-theme-tranquilpeak tranquilpeak</span><br><span class="line">$ <span class="built_in">cd</span> tranquilpeak</span><br><span class="line">$ npm install -g bower grunt-cli</span><br><span class="line">$ npm install</span><br><span class="line">$ bower install</span><br><span class="line">$ grunt build</span><br></pre></td></tr></table></figure><h3 id="config-yml-수정"><a href="#config-yml-수정" class="headerlink" title="_config.yml 수정"></a>_config.yml 수정</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: tranquilpeak</span><br></pre></td></tr></table></figure><h3 id="Enable-post-assets-folder-Enable-RSS-feed-Enable-pages"><a href="#Enable-post-assets-folder-Enable-RSS-feed-Enable-pages" class="headerlink" title="Enable post assets folder, Enable RSS feed, Enable pages"></a>Enable post assets folder, Enable RSS feed, Enable pages</h3><p><a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/DOCUMENTATION.md" rel="external nofollow noopener noreferrer" target="_blank">Hexo configuration</a></p><h3 id="빌드-후-로컬에서-확인해보기"><a href="#빌드-후-로컬에서-확인해보기" class="headerlink" title="빌드 후 로컬에서 확인해보기"></a>빌드 후 로컬에서 확인해보기</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p><a href="http://localhost:4000" rel="external nofollow noopener noreferrer" target="_blank">http://localhost:4000</a></p><p><code>$ hexo g</code> 빌드가 완료되면 public 폴더가 생성된다.<br>public 폴더 내의 파일을 배포하면 된다.</p><h3 id="관리"><a href="#관리" class="headerlink" title="관리"></a>관리</h3><p>draft 파일은 private 프로젝트로 올려두고,<br>tranquilpeak 는 fork 받아 필요한 부분만 수정하여 별도 프로젝트로 두었다.</p><p>로컬에서 draft 파일을 받아서 포스팅을 작성하고<br>hexo 빌드 후에 public 폴더내의 파일을 borakim-b.github.io 내에 copy 하는 스크립트 실행 후<br>두개의 프로젝트에 모두 code push 하는 형태</p><p><a href="https://github.com/borakim-b/borakim-b.github.io" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/borakim-b/borakim-b.github.io</a><br><a href="https://github.com/borakim-b/github-blog-draft" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/borakim-b/github-blog-draft</a><br><a href="https://github.com/borakim-b/hexo-theme-tranquilpeak" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/borakim-b/hexo-theme-tranquilpeak</a></p><h3 id="포스트-쓰기"><a href="#포스트-쓰기" class="headerlink" title="포스트 쓰기"></a>포스트 쓰기</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new post &lt;title&gt;</span><br></pre></td></tr></table></figure><h3 id="배포-플러그인-설치-후-배포하는-방법"><a href="#배포-플러그인-설치-후-배포하는-방법" class="headerlink" title="배포 플러그인 설치 후 배포하는 방법"></a>배포 플러그인 설치 후 배포하는 방법</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>_config.yml 파일에서 deploy 확인</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/&lt;Username&gt;/&lt;Username&gt;.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>배포 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://borakim-b.github.io/2018/05/15/github-blog-hexo-tranquilpeak/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
